PR #1 - Dockerização inicial
- Adicionado Dockerfile para executar a API com Uvicorn
- Adicionado .dockerignore para reduzir o contexto
- Criado docker-compose.yml simples
- Criado .env.example com variáveis usadas no projeto
- Atualizado README com instruções de uso em Docker
PR #2 - Módulo de disparos WhatsApp
- Criado backend assíncrono com FastAPI e SQLAlchemy
- Implementados modelos, rotas CRUD e worker
- Adicionado frontend simples com HTML/JS/CSS
- Atualizados Dockerfile e docker-compose para executar a nova API
- Incluído .env.example reduzido
PR #3 - Ajuste do serviço web
- Dockerfile agora copia todo o projeto e executa main:app
- Isso permite servir as páginas HTML na raiz e evita erros 404

PR #4 - Integracao do modulo de disparos ao sistema principal
- Roteadores /api integrados no main.py
- Worker e criacao de tabelas iniciados no startup
- Pagina /sistema/disparo servida pelo app principal
PR #5 - Novo layout responsivo para disparos
- Substituída interface em frontend/index.html por nova página com sidebar e páginas internas
- Novas cores seguindo padrão do sistema e logo do CED no menu
- script.js reescrito para integrar com API: criação e listagem de listas, mensagens, contatos e disparos
PR #6 - Redireciona menu Disparos para /sistema/disparo
- Ajuste de event handler no sistema/index.html para abrir nova página

PR #7 - Corrige acesso sem barra final a /sistema/disparo e atualiza menu

PR #8 - Corrige 404 em /sistema/disparo ordenando mounts
PR #9 - Ajustes em listas e página de grupos
- Novo fallback para SQLite em backend/app/models.py
- Interface de disparos agora usa Tailwind e favicon padrão
- Adicionado menu "Grupos" com listagem de participantes e exportação
- Script aprimorado com tratamento de erros e suporte a uploads
PR #10 - Ajuste de leitura da ASAAS_KEY
- Funções _headers e criacao de cobrança agora leem ASAAS_KEY dinamicamente.
- Corrigido problema de variáveis não carregadas causando falha nos GET /sistema.

PR #11 - Postgres por padrão no módulo de disparos
- Removido fallback para SQLite em backend/app/models.py.
- .env.example atualizado para refletir uso exclusivo do Postgres.
- README detalha variáveis padrão do docker-compose.
PR #12 - Variáveis de ambiente para endpoints
- Endpoints do WhatsApp e webhook Discord agora usam os.getenv com valor padrão.
PR #13 - Importação de contatos por lista
- Nova rota /api/contatos/importar/{lista_id} para receber CSV ou Excel e gravar contatos no banco.
- script.js atualizado para enviar o arquivo para a nova rota e exibir alerta.

PR #14 - Correção da importação de contatos
- Adicionado handler para o botão "Importar Contatos" em frontend/script.js enviando arquivo para a rota /api/contatos/importar.

PR #15 - Configuração de API base
- frontend/index.html inclui script definindo window.API_BASE.
- script.js passa a usar window.API_BASE como base da API.
PR #16 - Ferramenta CLI de administração do banco
- Criado db_admin.py com comandos init-db, add-lista, list-listas, add-contato e list-contatos
PR #17 - Script PHP para disparos
PR #18 - Atalho para /disparos
PR #19 - Importação por grupos e cache de mensagens restaurados
