PR #1 - Dockerização inicial
- Adicionado Dockerfile para executar a API com Uvicorn
- Adicionado .dockerignore para reduzir o contexto
- Criado docker-compose.yml simples
- Criado .env.example com variáveis usadas no projeto
- Atualizado README com instruções de uso em Docker
PR #2 - Módulo de disparos WhatsApp
- Criado backend assíncrono com FastAPI e SQLAlchemy
- Implementados modelos, rotas CRUD e worker
- Adicionado frontend simples com HTML/JS/CSS
- Atualizados Dockerfile e docker-compose para executar a nova API
- Incluído .env.example reduzido
PR #3 - Ajuste do serviço web
- Dockerfile agora copia todo o projeto e executa main:app
- Isso permite servir as páginas HTML na raiz e evita erros 404

PR #4 - Integracao do modulo de disparos ao sistema principal
- Roteadores /api integrados no main.py
- Worker e criacao de tabelas iniciados no startup
- Pagina /sistema/disparo servida pelo app principal
PR #5 - Novo layout responsivo para disparos
- Substituída interface em frontend/index.html por nova página com sidebar e páginas internas
- Novas cores seguindo padrão do sistema e logo do CED no menu
- script.js reescrito para integrar com API: criação e listagem de listas, mensagens, contatos e disparos
PR #6 - Redireciona menu Disparos para /sistema/disparo
- Ajuste de event handler no sistema/index.html para abrir nova página

PR #7 - Corrige acesso sem barra final a /sistema/disparo e atualiza menu

PR #8 - Corrige 404 em /sistema/disparo ordenando mounts
PR #9 - Ajustes em listas e página de grupos
- Novo fallback para SQLite em backend/app/models.py
- Interface de disparos agora usa Tailwind e favicon padrão
- Adicionado menu "Grupos" com listagem de participantes e exportação
- Script aprimorado com tratamento de erros e suporte a uploads
